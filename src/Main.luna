import Std.Foreign
import Std.Foreign.C.Value
import Std.System
import Std.HTTP
import Std.Time


def sign_that key msg:
    keyLen = key . length
    msgLen = msg . length
    inBufKey = Pointer CUChar . mallocElems keyLen
    inBufMsg = Pointer CUChar . mallocElems msgLen
    keySize = CUInt.fromInt keyLen
    msgSize = CUInt.fromInt msgLen
    outBuf = Pointer CUChar . mallocElems 32
    indexedKey = 0 . upto keyLen . zip key
    indexedKey . each (ix, elem):
        inBufKey . moveElems ix . write (CUChar.fromInt elem)

    indexedMsg = 0 . upto msgLen . zip msg
    indexedMsg . each (ix, elem):
        inBufMsg . moveElems ix . write (CUChar.fromInt elem)

    hmacFunPtr = lookupSymbol "hmac_luna" "hmac_sha256"
    hmacFunPtr . call None [inBufKey.toCArg, keySize.toCArg, inBufMsg.toCArg, msgSize.toCArg, outBuf.toCArg]

    result = 0 . upto 31 . each i:
        outBuf . moveElems i . read . toInt

    outBuf.free
    inBufKey.free
    inBufMsg.free

    result


def fakeAuthorization:
    System.getEnv "FAKE_AUTHORIZATION"

def fakeTimestamp:
    "20180707T155948Z"

def getTimestamp:
    Time.now.toUTC . format "%Y%m%dT%H%M%SZ"

def coalesce b: case b of
    Nothing: ""
    Just a: a

class AWSConfig:
    method :: Text
    uri :: Text
    body :: Text
    host :: Text

    def toRequest:
        request = case self.method of
            "POST": Http.post self.uri self.body
            "PUT": Http.put self.uri self.body
            other: Http.get self.uri

        h2 = request . addHeader "X-Amz-Date" fakeTimestamp
        h3 = h2 . addHeader "Host" self.host
        h4 = h3 . addHeader "Content-Type" "multipart/form-data"
        h5 = h4 . addHeader "Authorization" fakeAuthorization
        h5

def configFromFile path:
    f = JSON.parse (readFile path)
    [uri, host] = ["uri", "host"].map f.getText
    [method, body] = ["method", "body"].map x: coalesce(f.lookupText x)
    AWSConfig method uri body host

def main:
    config = configFromFile "config.json"
    request = config.toRequest
    response = request . perform
    print (response.json)
